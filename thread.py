"""
–ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏, –≤—ã–ø–æ–ª–Ω—è—é—â–∏–º–∏ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏ –≤
Telegram-–±–æ—Ç–µ.

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á –≤
Telegram-–±–æ—Ç–µ, —Ç–∞–∫–∏—Ö –∫–∞–∫ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞
–ø–ª–∞—Ç–µ–∂–µ–π. –û–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–µ—Ö–∞–Ω–∏–∑–º –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç–∏ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á –≤ —Ñ–æ–Ω–æ–≤–æ–º
—Ä–µ–∂–∏–º–µ, –Ω–µ –±–ª–æ–∫–∏—Ä—É—è –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –±–æ—Ç–∞.

–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:

    import os
    import threading
    import time
    import requests

    from api_worker import get_application
    from billing import check_payment
    from bot import TG_ID_ADMIN, bot, pay_data
    from models import *

    TOKEN = os.getenv('TOKEN')
    PAYMENT_API = os.getenv('PAYMENT_API')

    # –û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ get_training()
    # –û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ get_pay()

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Ç–æ–∫–æ–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á
    thread_training = threading.Thread(target=get_training)
    thread_training.start()

    thread_payment = threading.Thread(target=get_pay)
    thread_payment.start()
"""
import datetime
import json
import os
import time

import requests

from admin import send_admin_timetable, get_weekday
from api_worker import get_application, get_review, get_weekday_timetable
from billing import check_payment
from bot import TG_ID_ADMIN, bot, pay_data
from config import YANDEX_TOKEN
from models import *

TOKEN = os.getenv('TOKEN')
PAYMENT_API = os.getenv('PAYMENT_API')


def get_training():
    """
    –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏
    –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–∫–∞—Ö.

    –§—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ü–∏–∫–ª–µ, —Å –ø–µ—Ä–∏–æ–¥–æ–º 60 —Å–µ–∫—É–Ω–¥. –ù–∞ –∫–∞–∂–¥–æ–π
    –∏—Ç–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏.
    –ï—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—Ç—Å—è –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    —Å –¥–µ—Ç–∞–ª—è–º–∏ –∑–∞—è–≤–∫–∏, –∏ –∑–∞—è–≤–∫–∞ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
    """
    while True:
        time.sleep(60)
        for i in get_application():
            app = (
                Application.select()
                .where(Application.id_application == i['id'])
                .first()
            )
            if not app:
                bot.send_message(
                    TG_ID_ADMIN,
                    f'–£ –≤–∞—Å –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞!\n'
                    f'–ò–º—è: {i["name"]}\n'
                    f'–ö–æ–Ω—Ç–∞–∫—Ç: {i["contact"]}\n'
                    f'–ü–æ—á—Ç–∞: {i["email"]}\n'
                    f'–î–∞—Ç–∞ –∑–∞—è–≤–∫–∏: {i["created_at"]}',
                )
                app = Application(id_application=i['id'])

                app.save()


def get_pay():
    """
    –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–µ–π –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    –æ–± —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–∞—Ö.

    –§—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ü–∏–∫–ª–µ, —Å –ø–µ—Ä–∏–æ–¥–æ–º 15 —Å–µ–∫—É–Ω–¥. –ù–∞ –∫–∞–∂–¥–æ–π
    –∏—Ç–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ `pay_data`.
    –ï—Å–ª–∏ –ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ–¥–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏
    –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, –∞ —Ç–∞–∫–∂–µ –¥–µ–ª–∞–µ—Ç—Å—è POST-–∑–∞–ø—Ä–æ—Å –∫ –≤–Ω–µ—à–Ω–µ–º—É API –¥–ª—è
    –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞.
    """
    while True:
        time.sleep(15)
        for i in pay_data.keys():
            if pay_data.get(i) and check_payment(
                    pay_data[i]['payment_id'], pay_data[i]['amount']
            ):
                bot.send_message(i, '–í–∞—à –ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–µ–ª!')
                bot.send_message(
                    TG_ID_ADMIN,
                    f'–ü–æ—Å—Ç—É–ø–∏–ª –ø–ª–∞—Ç–µ–∂ –æ—Ç: '
                    f'{pay_data[i]["name"]}\n'
                    f'ID –ø–ª–∞—Ç–µ–∂–∞: '
                    f'{pay_data[i]["payment_id"]}\n'
                    f'–Ω–∞ —Å—É–º–º—É: '
                    f'{pay_data[i]["amount"]}',
                )
                requests.post(PAYMENT_API + pay_data[i]['name'] + '/',
                              timeout=5)
                pay_data[i] = {}


def review():
    """
    –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç
    —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–∞—Ö.

    –§—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ü–∏–∫–ª–µ —Å –ø–µ—Ä–∏–æ–¥–æ–º 60 —Å–µ–∫—É–Ω–¥. –ù–∞ –∫–∞–∂–¥–æ–π
    –∏—Ç–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ get_review().
    –ï—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π –æ—Ç–∑—ã–≤, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    —Å –¥–µ—Ç–∞–ª—è–º–∏ –æ—Ç–∑—ã–≤–∞, –∏ –æ—Ç–∑—ã–≤ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
    """
    while True:
        time.sleep(60)
        for i in get_review()['reviews']:
            rev = Review.select().where(Review.id_review == i['id']).first()
            if not rev:
                bot.send_message(
                    TG_ID_ADMIN,
                    f'–ü—Ä–∏—à—ë–ª –ø—Ä–æ–µ–∫—Ç –Ω–∞ —Ä–µ–≤—å—é!\n'
                    f'–°—Å—ã–ª–∫–∞: {i["github"]}\n'
                    f'–ö–æ–º–µ–Ω—Ç–∞—Ä–∏–π: {i["comment"]}\n',
                )
                rev = Review(id_review=i['id'])

                rev.save()


def send_timetable_to_administrator():
    """
    –§—É–Ω–∫—Ü–∏—è –∫–∞–∂–¥—É—é –ø–æ–ª–Ω–æ—á—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—Å–µ—Ö —É—Ä–æ–∫–æ–≤
    –∑–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å.

    –§—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ü–∏–∫–ª–µ.
    """
    while True:
        now = datetime.datetime.now()
        midnight = (now + datetime.timedelta(days=1)).replace(hour=0, minute=0,
                                                              second=0,
                                                              microsecond=0)
        seconds_until_midnight = (midnight - now).total_seconds()

        # –ñ–¥–µ–º –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ª—É–Ω–æ—á–∏
        time.sleep(seconds_until_midnight)
        send_admin_timetable()


def check_time(target_time_str: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Ä–µ–º—è –¥–æ –Ω–∞—á–∞–ª–∞ —É—Ä–æ–∫–∞ –≤ –º–∏–Ω—É—Ç–∞—Ö.

    Args:
        target_time_str: str (–≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ 12:20)

    Returns:
        bool: True - –µ—Å–ª–∏ –¥–æ —É—Ä–æ–∫–∞ –æ—Ç 1 –¥–æ 5 –º–∏–Ω—É—Ç, –∏–Ω–∞—á–µ False
    """
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
    now = datetime.datetime.now()

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤—Ä–µ–º–µ–Ω–∏ –≤ –æ–±—ä–µ–∫—Ç datetime
    target_time = datetime.datetime.strptime(target_time_str, "%H:%M")

    # –ó–∞–º–µ–Ω—è–µ–º –¥–∞—Ç—É —Ü–µ–ª–µ–≤–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é
    target_time = target_time.replace(year=now.year, month=now.month, day=now.day)

    # –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–Ω–∏—Ü—É –≤–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ –º–∏–Ω—É—Ç–∞—Ö
    diff = (target_time - now).total_seconds() / 60

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Å—Ç–∞—ë—Ç—Å—è –ª–∏ –æ—Ç 1 –¥–æ 5 –º–∏–Ω—É—Ç –¥–æ —Ü–µ–ª–µ–≤–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    if 1 <= diff <= 5:
        return True
    return False


def get_lesson_link():
    headers = {
        'Authorization': YANDEX_TOKEN,
        'Content-Type': 'application/json',
    }

    data = json.loads(requests.post(
        'https://cloud-api.yandex.net/v1/telemost-api/conferences',
        headers=headers).text)
    return data['join_url']


def send_lesson_link_to_group():
    """
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —É—Ä–æ–∫ –≤ —Ç–µ–ª–µ–º–æ—Å—Ç–µ –∑–∞ 5 –º–∏–Ω—É—Ç –¥–æ –Ω–∞—á–∞–ª–∞ –∑–∞–Ω—è—Ç–∏—è.

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ–º –≤ —É—á–µ–±–Ω–æ–π –≥—Ä—É–ø–ø–µ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
    """
    while True:
        weekday = get_weekday()
        data = get_weekday_timetable(weekday)

        group_id = None
        for i in data['timetables']:
            if check_time(i['time_lesson'][:5]):
                for group in json.loads(
                        requests.get('https://coursemc.ru/api/v1/groups/').text
                ):
                    if group['title'] == i['group']:
                        group_id = group['id']
        if not group_id:
            time.sleep(60)
            continue

        lesson_url = get_lesson_link()

        bot.send_message(TG_ID_ADMIN, f'üëâ –°—Å—ã–ª–∫–∞ –Ω–∞ —É—Ä–æ–∫: {lesson_url}')

        for student in json.loads(
                requests.get('https://coursemc.ru/api/v1/student/').text
        ):
            if student['groups'] == group_id:
                user = User.select().where(
                    User.name == student['name']).first()
                if user:
                    bot.send_message(int(user.chat_id), f'üëâ –°—Å—ã–ª–∫–∞ –Ω–∞ —É—Ä–æ–∫: {lesson_url}')
        time.sleep(900)
