"""
–ú–æ–¥—É–ª—å —Å –ª–æ–≥–∏–∫–æ–π —Ä–∞–±–æ—Ç—ã –¥–µ–π—Å—Ç–≤–∏–π –∞–¥–º–∏–Ω–∞.
"""
import datetime

from api_worker import get_application, get_weekday_timetable
from config import bot
from keyboard_mixin import KeyboardMixin
from models import User

TG_ID_ADMIN = 814401631

kb = KeyboardMixin()


def admin_actions(message, user):
    """
    –í —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç –∑–¥–æ—Ä–æ–≤–∞–µ—Ç—Å—è —Å –∞–¥–º–∏–Ω–æ–º –∏ –∫–∏–¥–∞–µ—Ç –µ–º—É
    –∞–¥–º–∏–Ω–æ–≤—Å–∫—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.
    """

    bot.send_message(
        message.chat.id,
        f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, {user.name}!', reply_markup=kb.admin_kb()
    )


@bot.message_handler(
    func=lambda message: message.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º üì£')
def message_admin(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.

    –ö–æ–≥–¥–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
    –≤—Å–µ–º üì£",
    –±–æ—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
    –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.

    Args:
        message (telebot.types.Message):
        –°–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.
    """
    bot.send_message(TG_ID_ADMIN, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç: ')
    bot.register_next_step_handler(message, send_message_to_all_users)


@bot.message_handler(
    func=lambda message: message.text == '–ó–∞—è–≤–∫–∏ üìù')
def application_admin(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.

    –ö–æ–≥–¥–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º "–ó–∞—è–≤–∫–∏ üìù",
    –±–æ—Ç –ø–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞—è–≤–∫–∏ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç
    –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.

    Args:
        message (telebot.types.Message):
        –°–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.
    """
    applications = get_application()
    for app in applications:
        bot.send_message(
            TG_ID_ADMIN,
            f'–£ –≤–∞—Å –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞!\n'
            f'–ò–º—è: {app["name"]}\n'
            f'–ö–æ–Ω—Ç–∞–∫—Ç: {app["contact"]}\n'
            f'–ü–æ—á—Ç–∞: {app["email"]}\n'
            f'–î–∞—Ç–∞ –∑–∞—è–≤–∫–∏: {app["created_at"]}',
        )


def send_message_to_all_users(message):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.

    –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç
    —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.

    Args:
        message (telebot.types.Message): –°–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ
        –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
    """
    user = User.select().where(User.chat_id != TG_ID_ADMIN)
    for i in user:
        bot.send_message(i.chat_id, f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {message.text}')
    bot.send_message(TG_ID_ADMIN, '–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!')


@bot.message_handler(
    func=lambda message: message.text == '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ üìÜ')
def timetable_choice_weekday(message):
    """
    –î–µ–π—Å—Ç–≤–∏—è –±–æ—Ç–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ üìÜ'.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ —Å –¥–Ω—è–º–∏ –Ω–µ–¥–µ–ª–∏.
    """
    chat_id = message.chat.id
    bot.send_message(chat_id,
                     '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏:',
                     reply_markup=kb.weekday_buttons())
    bot.register_next_step_handler(message, timetable_view)


def get_weekday() -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ (–ø—Ä–∏–º–µ—Ä: –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, –í—Ç–æ—Ä–Ω–∏–∫)

    Returns:
        str: –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏.
    """
    today = datetime.datetime.now()
    days_of_week = ['–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥',
                    '–ü—è—Ç–Ω–∏—Ü–∞',
                    '–°—É–±–±–æ—Ç–∞', '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ']

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–Ω—è –Ω–µ–¥–µ–ª–∏ (0 = –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, 6 = –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)
    day_of_week = today.weekday()
    weekday = days_of_week[day_of_week]
    return weekday


def send_admin_timetable(weekday: str = None) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —É–∫–∞–∞–Ω–Ω—ã–π –¥–µ–Ω—å.

    –ï—Å–ª–∏ –¥–µ–Ω—å –Ω–µ —É–∫–∞–∑–∞–Ω, —Ç–æ –±–µ—Ä—ë—Ç—Å—è —Ç–µ–∫—É—â–∏–π.

    Args:
        weekday (str): –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏.
    """
    if not weekday:
        weekday = get_weekday()
    data = get_weekday_timetable(weekday)

    if weekday[-1] == '–∞':
        weekday = weekday[:-1] + '—É'

    timetables = []

    for k, i in enumerate(data['timetables']):
        timetables.append([i["group"], i["time_lesson"][:5]])

    timetables = list(sorted(timetables, key=lambda x: int(x[1][:2])))

    msg = f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {weekday.lower()}:\n'
    for k, timetable in enumerate(timetables):
        msg += f'{k + 1}) {timetable[0]}: {timetable[1]}\n'
    bot.send_message(TG_ID_ADMIN, msg, reply_markup=kb.admin_kb())


def timetable_view(message):
    """
    –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏.
    """
    send_admin_timetable(message.text)
