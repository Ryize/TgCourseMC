"""
–ú–æ–¥—É–ª—å —Å –ª–æ–≥–∏–∫–æ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
"""

import datetime
import os
import telebot

import requests

from admin import admin_actions
from api_worker import get_data, get_payment
from billing import get_payment_url
from config import bot
from keyboard_mixin import KeyboardMixin
from models import User

TG_ID_ADMIN = 814401631

kb = KeyboardMixin()

temp_data = {}
pay_data = {}
number_of_passes = {}


@bot.message_handler(commands=["start"])
def welcome(message):
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É "start",
    –≤—ã–¥–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç tg id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å tg id
    –≤ —Ç–∞–±–ª–∏—Ü–µ users.db. –ï—Å–ª–∏ tg id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –≤ –±–∞–∑–µ, —Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    –≤—ã–¥–∞—ë—Ç—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ users_kb, –∏–Ω–∞—á–µ –≤—ã–¥–∞—ë—Ç –∫–Ω–æ–ø–∫—É "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è".
    –ï—Å–ª–∏ –∑–∞—à—ë–ª –∞–¥–º–∏–Ω, —Ç–æ –æ–Ω–∞ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –µ–≥–æ tg id c id –∞–¥–º–∏–Ω–∞ –≤ –±–∞–∑–µ –∏
    –µ—Å–ª–∏ id —Å–æ–≤–ø–∞–ª–æ, –±–æ—Ç –≤—ã–¥–∞—ë—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∞–¥–º–∏–Ω—É –∏ –µ–≥–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é
    –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.
    """
    try:
        user = User.select().where(User.chat_id == message.chat.id).first()
        bot.send_message(
            message.chat.id,
            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, {user.name}"
        )
    except AttributeError:
        bot.send_message(
            message.chat.id,
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ CourceMC!\n"
            " –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã, –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å,"
            " –∏—Å–ø–æ–ª—å–∑—É—è –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å, —É–∫–∞–∑–∞–Ω–Ω—ã–π "
            "–ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Å–∞–π—Ç–µ –∫—É—Ä—Å–∞!",
            reply_markup=kb.main_kb(),
        )


@bot.message_handler(func=lambda message: message.text == "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—èüîë")
def login(message):
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å main_kb, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    –ª–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ–∂–∏–¥–∞–µ—Ç –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    """
    temp_data[message.chat.id] = {}
    keyboard = telebot.types.ReplyKeyboardRemove()
    bot.send_message(
        message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω, —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Å–∞–π—Ç–µ.",
    reply_markup=keyboard)
    bot.register_next_step_handler(message, password)


def password(message):
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ª–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≤–∏–¥–µ —Å–æ–æ–±—â–µ–Ω–∏—è,
    —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –≤ —Å–ª–æ–≤–∞—Ä–µ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–∞—Ä–æ–ª—å.
    –û–∂–∏–¥–∞–µ—Ç –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è.
    """
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:")
    bot.register_next_step_handler(message, check_autorization)
    temp_data[message.chat.id]["login"] = message.text


def check_autorization(message):
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–∞—Ä–æ–ª—å –≤ –≤–∏–¥–µ —Å–æ–æ–±—â–µ–Ω–∏—è, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –≤ —Å–ª–æ–≤–∞—Ä—å,
    –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ api,
    –ø—Ä–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏ –≤—ã–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è,
    –ø—Ä–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏ - —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π.
    """
    temp_data[message.chat.id]["password"] = message.text
    flag = False
    for i in get_data():
        if (
            i["name"] == temp_data[message.chat.id]["login"]
            and i["password"] == temp_data[message.chat.id]["password"]
        ):
            flag = True
    if flag:
        user = User(
            chat_id=message.chat.id, name=temp_data[message.chat.id]["login"]
        )

        user.save()
        if message.chat.id == TG_ID_ADMIN:
            admin_actions(message, user)
        else:
            bot.send_message(
                message.chat.id,
                f'–ü—Ä–∏–≤–µ—Ç, {temp_data[message.chat.id]["login"]}!',
                reply_markup=kb.user_kb(),
            )
            temp_data[message.chat.id] = {}
    else:
        bot.send_message(
            message.chat.id,
            "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ!",
        )
        login(message)


@bot.message_handler(func=lambda message: message.text == "–ü–∏–Ω–≥ ‚öæ")
def button_ping(message):
    """
    –î–µ–π—Å—Ç–≤–∏—è –±–æ—Ç–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ "–ü–∏–Ω–≥ ‚öæ"

    –≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω—É–∂–Ω–∞ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç.
    –ï—Å–ª–∏ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç, –æ–Ω –ø–∏—à–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é "–ü–æ–Ω–≥" –Ω–∞ –µ–≥–æ –Ω–∞–∂–∞—Ç–∏–µ
    –∫–Ω–æ–ø–∫–∏ "–ü–∏–Ω–≥".
    """
    bot.send_message(message.chat.id, "–ü–æ–Ω–≥ ‚öæ")


@bot.message_handler(
    func=lambda message: message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ üí§"
)
def skip_lesson_buttons(message):
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã user_kb —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–ø—É—Å–∫–µ –∑–∞–Ω—è—Ç–∏—è(–π) –∏
    –≤—ã–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–Ω—è—Ç–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∂–µ–ª–∞–µ—Ç
    –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å.
    """
    bot.send_message(
        message.chat.id,
        "–°–∫–æ–ª—å–∫–æ –∑–∞–Ω—è—Ç–∏–π —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å?",
        reply_markup=kb.skip_lesson_kb(),
    )

    @bot.message_handler(
        func=lambda message: message.text in ["1 üí§", "2 üí§üí§", "3 üí§üí§üí§"]
    )
    def confirmation_skip_lesson(message):
        """
        –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã skip_lesson_kb, –∑–∞–Ω–æ—Å—è –¥–∞–Ω–Ω—ã–µ
        –æ –ø—Ä–æ–ø—É—Å–∫–µ –∑–∞–Ω—è—Ç–∏—è(–π) –≤ —Å–ª–æ–≤–∞—Ä—å number_of_passes —Å –∫–ª—é—á–æ–º
        "lessons". –¢–∞–∫–∂–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ
        –ø—Ä–æ–ø—É—Å–∫–µ –∑–∞–Ω—è—Ç–∏—è(–π).
        """
        bot.send_message(
            message.chat.id,
            "–¢–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ(—è)?",
            reply_markup=kb.skip_lesson_kb2(),
        )
        if message.text == "1 üí§":
            number_of_passes["lessons"] = 1
        elif message.text == "2 üí§üí§":
            number_of_passes["lessons"] = 2
        elif message.text == "3 üí§üí§üí§":
            number_of_passes["lessons"] = 3
        @bot.message_handler(func=lambda message: message.text == "–î–∞ üëç")
        def pass_lesson(message):
            """
            –î–µ–π—Å—Ç–≤–∏—è –±–æ—Ç–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø—Ä–æ–ø—É—Å–∫–∞ –∑–∞–Ω—è—Ç–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            –ø–æ –∫–Ω–æ–ø–∫–µ "–î–∞ üëç".

            –ù–∞ —Å–∞–π—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è post –∑–∞–ø—Ä–æ—Å(—ã) (–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç
            –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–ø—É—Å–∫–æ–≤) —Å –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–∞—Ç–æ–π –ø—Ä–æ–ø—É—Å–∫–∞
            –∑–∞–Ω—è—Ç–∏—è(–π). –¢–∞–∫–∂–µ –∞–¥–º–∏–Ω—É –ø—Ä–∏—Å—ã–ª–∞–µ—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–ø—É—Å–∫–µ
            –∑–∞–Ω—è—Ç–∏—è(–π) –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –±–æ—Ç
            —Å–æ–æ–±—â–∞–µ—Ç –æ–± —É—Å–ø–µ—à–Ω–æ–π –∑–∞–ø–∏—Å–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–ø—É—Å–∫–æ–≤ –∑–∞–Ω—è—Ç–∏–π –∏
            –≤—ã—Å—ã–ª–∞–µ—Ç –µ–º—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É user_kb.
            """
            api_missing = os.getenv("API_MISSING")
            user = User.select().where(User.chat_id == message.chat.id).first()
            date = datetime.date.today() + datetime.timedelta(days=1)
            for i in range(number_of_passes["lessons"]):#–î–ª—è —á–µ–≥–æ —Ü–∏–∫–ª –µ—Å–ª–∏ i –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è?
                requests.post(
                    api_missing,
                    data={
                        "username": user.name,
                        "date": date.strftime("%Y-%m-%d")
                    }, timeout=5
                )
                date += datetime.timedelta(days=2)
            bot.send_message(
                TG_ID_ADMIN,
                f"‚ùóÔ∏è –£—á–µ–Ω–∏–∫ {user.name} –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç"
                f" {number_of_passes['lessons']} –∑–∞–Ω—è—Ç–∏–µ(—è) ‚ùóÔ∏è",
            )
            bot.send_message(
                message.chat.id,
                "–í–∞—à–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–ø—É—Å–∫–æ–≤ –∑–∞–Ω—è—Ç–∏–π —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–æ!",
                reply_markup=kb.user_kb(),
            )

        @bot.message_handler(func=lambda message: message.text == "–ù–µ—Ç üëé")
        def no_pass_lesson(message):
            """
            –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–¥—É–º–∞–ª –∏ –æ—Ç–∫–∞–∑–∞–ª—Å—è –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å –∑–∞–Ω—è—Ç–∏–µ(—è),
            –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–µ—Ç üëé", –µ–º—É –±–æ—Ç –æ—Ç—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤—ã—Å—ã–ª–∞–µ—Ç
            –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É user_kb.
            """
            bot.send_message(
                message.chat.id,
                "–•–æ—Ä–æ—à–æ, —á—Ç–æ –≤—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å –∑–∞–Ω—è—Ç–∏–µ(—è) üëçüëçüëç",
                reply_markup=kb.user_kb(),
            )


@bot.message_handler(func=lambda message: message.text == "–û–ø–ª–∞—Ç–∞ üí∞")
def pay(message):
    user = User.select().where(User.chat_id == message.chat.id).first()
    amount = get_payment(user.name)["amount"]
    if amount <= 0:
        bot.send_message(message.chat.id, '–í—ã —É–∂–µ –æ–ø–ª–∞—Ç–∏–ª–∏ –∑–∞–Ω—è—Ç–∏—è!')
        return
    payment = get_payment_url(amount)
    bot.send_message(
        message.chat.id, f"–û–ø–ª–∞—Ç–∏—Ç–µ {amount} —Ä—É–±–ª–µ–π, –ø–æ —Å—Å—ã–ª–∫–µ: {payment[0]}"
    )
    pay_data[message.chat.id] = {
        "amount": amount,
        "payment_id": payment[1],
        "name": user.name,
    }
